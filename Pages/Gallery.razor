@page "/gallery"

@using System.Collections.Generic

<div class="main page gallery">
    <div class="main image-gallery">
        <div class="preview-layout">
            <button class="btn" onclick="@PrevImage"><img class="nav-btn" src="/img/previous.svg"></button>
            <div class="preview">
                <img src="@SelectedImage" alt="Selected Image" class="preview-image" />
            </div>
            <button class="btn" onclick="@NextImage"><img class="nav-btn" src="/img/next.svg"></button>
        </div>
        <div class="thumbnails">
            @foreach (var image in Images)
            {
                <img src="@image" @onclick="(() => SelectImage(image))" class="thumbnail" />
            }
        </div>
    </div>
</div>

@code {
    private List<string> Images = new List<string>
    {
        "/img/gallery/image1.jpg",
        "/img/gallery/image2.jpg",
        "/img/gallery/image3.jpg",
        "/img/gallery/image4.jpg",
        "/img/gallery/image5.jpg",
        "/img/gallery/image6.jpg",
        "/img/gallery/image7.jpg",
        "/img/gallery/image8.jpg",
        "/img/gallery/image9.jpg",
        "/img/gallery/image10.jpg",
        "/img/gallery/image11.jpg",
        "/img/gallery/image12.jpg",
        "/img/gallery/image13.jpg",
        "/img/gallery/image14.jpg",
        "/img/gallery/image15.jpg",
        "/img/gallery/image16.jpg"
    };

    private string SelectedImage { get; set; }

    protected override void OnInitialized()
    {
        SelectedImage = Images[0];
    }
    private void SelectImage(string image)
    {
        SelectedImage = image;
    }

    private void PrevImage()
    {
        string currentImg = SelectedImage.Replace("/img/gallery/image", "").Replace(".jpg", "");
        int prevImg = Convert.ToInt32(currentImg) - 1;

        Console.WriteLine(currentImg);
        Console.WriteLine(prevImg);

        if (prevImg < 1)
            prevImg = Images.Count;

        Console.WriteLine(Images[prevImg - 1]);
        SelectImage(Images[prevImg - 1]);
    }

    private void NextImage()
    {
        string currentImg = SelectedImage.Replace("/img/gallery/image", "").Replace(".jpg", "");
        int nextImg = Convert.ToInt32(currentImg) + 1;

        Console.WriteLine(currentImg);
        Console.WriteLine(nextImg);

        if (nextImg > Images.Count)
            nextImg = 1;

        Console.WriteLine(Images[nextImg - 1]);
        SelectedImage = Images[nextImg - 1];
    }
}

<style>
    .image-gallery {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100%;
    }

    .preview-layout {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .preview {
        max-width: 50rem;
        max-height: 50rem;
        width: 40rem;
        height: 40rem;
        display: flex;
        justify-content: center;
        align-items: center;
        margin: 2%
    }

    .preview-image {
        max-width: 100%;
        max-height: 100%;
        box-shadow: 4px 4px 8px #000;
        border: 5px solid rgb(255,255,255);
    }

    .nav-btn {
        width: 6rem;
        height: 6rem;
        display: flex;
        justify-content: center;
        align-items: center;
        filter: invert(100%) sepia(100%) saturate(1%) hue-rotate(2deg) brightness(101%) contrast(102%);
    }

    .thumbnails {
        display: flex;
        gap: .5rem;
        width: 60rem;
        height: 6rem;
        overflow: scroll;
        scroll-behavior: smooth;
        scrollbar-color: rgb(255,255,255);
        align-items: center;
    }

    .thumbnail {
        width: 5rem;
        height: 5rem;
        object-fit: cover;
        cursor: pointer;
        transition: transform 0.2s;
        box-shadow: 2px 2px 4px #000;
    }

    .thumbnail:hover {
        transform: scale(1.1);
    }
</style>